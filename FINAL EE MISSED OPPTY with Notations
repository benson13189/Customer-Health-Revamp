Select 
store_id as "Store ID",
sum(case
    when eligibility_flag = 'TRUE' and units_sold_with_discount >= '1' then 1 else 0 end) as "Eligible with Discount", --adding total tx's where EE eligibility flag is true (store is enrolled and transaction are eligible for engage discount) and units sold with discount is at least 1
sum(case
    when eligibility_flag = 'TRUE' and units_sold_with_discount < '1' then 1 else 0 end) as "Eligible no Discount", --adding total tx's where EE eligibility flag is true and units sold with discount is less than 1
sum(case
    when eligibility_flag = 'TRUE' then 1 else 0 end) as "Total Eligible TX's", --total ee eligible tx's
case
    when "Total Eligible TX's" > '0' then cast(("Eligible with Discount" / "Total Eligible TX's") * 100 as number (10,0))
    when "Total Eligible TX's" = '0' then 0
    end as "Percent Eligible with Discount",--case statement to calculate percentage eligible tx's with EE discount given
case
    when "Total Eligible TX's" > '0' then cast(("Eligible no Discount" / "Total Eligible TX's") * 100 as number (10,0))
    when "Total Eligible TX's" = '0' then 0
    end as "Percent Eligible no Discount", -- case statement to calculate percentage eligible tx's without EE discount given
cast(sum(case
    when eligibility_flag = 'TRUE' and units_sold_with_discount >= '1' then discount_split_evenly else 0 end) as number(10,2)) as "Total Amount of Discounts Given",--total amount of ee discounts given pulled from discount split evenly column in EE program results table
case
    when "Eligible with Discount" > '0' then cast((("Total Amount of Discounts Given"/"Eligible with Discount") * "Eligible no Discount") as number(10,2))
    when "Eligible with Discount" = '0' then cast(("Total Amount of Discounts Given") as number(10,2))
    end as "Missed Discount Amount", --case statement to calculate the estimated missed discount $ amount; when 
case
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '90' and '100' then 90
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '80' and '89' then 80
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '70' and '79' then 70
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '60' and '69' then 60
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '50' and '59' then 50
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '40' and '49' then 40
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '30' and '39' then 30
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '20' and '29' then 20
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '10' and '19' then 10
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '0' and '9' then 0
    when bitand(bit_flag,1024)<>1024 then 0 
    Else 0 
    end as "Discounts Given Percentile",--case statement to bucket stores with active engage by percentiles of eligible tx's with a discount given
case
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" >= '50' then 3
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '35' and '49' then 2
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" between '15' and '34' then 1
    when bitand(bit_flag,1024)=1024 and "Percent Eligible with Discount" <= '14' then 0
    when bitand(bit_flag,1024)<>1024 then 0 
    end as "New CHO" --case statement bucketing active engage stores by percent of eligible tx's given w/EE discount to calculate new customer health output


from "PROD"."RETAILER_PERFORMANCE"."ENGAGE_PROGRAM_ELIGIBILITY_RESULTS" 
    join "PROD"."SALESFORCE"."ACCOUNT" as sfdc_account
        on store_id = store_id__c -- joining sfdc accounts to ee program eligibilty results table on store ids
    join "PROD"."APPDB"."STORES" as engage_status
        on store_id = engage_status.id --adding in appdbstores to grab appropriate bitflag for each store
where
timestamp >= (dateadd('day',-30,getdate())) and --limiting query results to eligible tx's that occured within the last 30 days
bitand(engage_status.bit_flag,1024)=1024 and --limiting query results to stores that have active engage
engage_status.engage_first_ping_at is not null --limiting to stores that actually have engage first tx pings (ie installed)
group by 
"Store ID",engage_status.bit_flag
